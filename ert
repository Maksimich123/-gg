#include <ESP8266WiFi.h>//Import Wifi libery
#include <WifiClient.h.>//Import Wifi libery
#include <ESP8266WebServer.h> //Import ESP8266 WiFi WebServer

#define APSID "Indikator"
#define APPSK "chefir123"

const char *ssid = APSID;
const char *password = APPSK;

ESP8266WebServer server(80);

#define PIN_NEO_PIXEL  D2   // На каком пине лента
#define NUM_PIXELS     25   // Число светодиодов в ленте
#define button_pin  D6

#include <Adafruit_NeoPixel.h>

Adafruit_NeoPixel pix(NUM_PIXELS, PIN_NEO_PIXEL, 
                           NEO_GRB + NEO_KHZ800);

int NUM_PIXELS_X=5;
int NUM_PIXELS_Y=5;


uint32_t c0 = 0x09b30f;
uint32_t c1 = 0xff1c1c;

uint32_t happy[NUM_PIXELS] = {
c1, c0 ,c1 ,c0 , c1,
c1, c0 ,c1 ,c0 , c1,
c1, c1 ,c1 ,c1 , c1,
c0, c1 ,c1 ,c1 , c0, 
c1, c0 ,c0 ,c0 , c1,
};

void pic(uint32_t pat[]) {
    int i = 0;
    for(int y=0; y<NUM_PIXELS_Y; y++) {
        for(int x=0; x<NUM_PIXELS_X; x++) {
          //int i = y * NUM_PIXELS_Y + x;
          
          int j = (y%2 == 0 )?i:y * NUM_PIXELS_Y-1 + NUM_PIXELS_X-x;
          
          //if (y%2 == 0 ) i = i + y el
          //int i = 
          //uint32_t color=pix.Color(0, 255, 0);
          
          uint32_t color=pat[i];
          
          //if (em[i] == 1) color=pix.Color(255, 0, 0);
          pix.setPixelColor(j, color);
          pix.show();
          Serial.print(i); Serial.print(" "); Serial.print(j); Serial.print(" ");  Serial.println(pat[i]);
          i++;
        }
    }
  
}

void handleRoot() {
  Serial.println("Client request /");
  server.send(200, "text/html", "< h1 >Привет!<h1>");
  
}

void handleHappy(){
Serial.println("Client request /happy");
server.send(200, "text/html", "< h1 >Happy!<h1>");
// 
pic(happy);
 pix.show();
}

void setup() {
    delay(1000);
  Serial.begin(115200);
  Serial.println();
  Serial.print("Configuring access point... ");

  WiFi.softAP(ssid, password);

  IPAddress myIP = WiFi.softAPIP();
  Serial.print("AP IP adress: ");
  Serial.println(myIP);
  server.on("/", handleRoot);
  server.begin();
  Serial.println("HTTP server started");

   pix.begin(); // иницилизация
   pix.setBrightness(50); //яркость


server.on("/happy", handleHappy);
}


void loop() {
   server.handleClient();
}
  
 
 
  




        
      
